% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Connectivity-Algorithms-3}
\alias{Connectivity-Algorithms-3}
\alias{getBipartitePartitions}
\alias{getAndCheckTopologicalSort}
\alias{getTopologicalSort}
\alias{FindStronglyConnectedComponents}
\alias{FindStronglyConnectedCutArcs}
\alias{FindBiEdgeConnectedCutEdges}
\alias{FindBiNodeConnectedComponents}
\alias{FindBiNodeConnectedCutNodes}
\alias{FindConnectedComponents}
\alias{FindBiEdgeConnectedComponents}
\title{Connectivity Algorithms - List Return}
\usage{
getBipartitePartitions(arcSources, arcTargets, numNodes)

getAndCheckTopologicalSort(arcSources, arcTargets, numNodes)

getTopologicalSort(arcSources, arcTargets, numNodes)

FindStronglyConnectedComponents(arcSources, arcTargets, numNodes)

FindStronglyConnectedCutArcs(arcSources, arcTargets, numNodes)

FindBiEdgeConnectedCutEdges(arcSources, arcTargets, numNodes)

FindBiNodeConnectedComponents(arcSources, arcTargets, numNodes)

FindBiNodeConnectedCutNodes(arcSources, arcTargets, numNodes)

FindConnectedComponents(arcSources, arcTargets, numNodes)

FindBiEdgeConnectedComponents(arcSources, arcTargets, numNodes)
}
\arguments{
\item{arcSources, }{a vector corresponding to the source nodes of a graph's edges}

\item{arcTargets, }{a vector corresponding to the destination nodes of a graph's edges}

\item{numNodes, }{the number of nodes in the graph}
}
\value{
a List, returning some set of nodes or edges in a graph

`getBipartitePartitions` returns an R List containing (1) A boolean stating if the graph is bipartite, and (2) an std::vector of length numNodes, containing the partition for each node

`getAndCheckTopologicalSort` returns an R List containing (1) A boolean stating if the graph is a dag, and (2) a vector of length numNodes, containing the index of vertex i in the ordering at location i

`getTopologicalSort` returns a vector of length numNodes, containing the index of vertex i in the ordering at location i.
}
\description{
`FindStronglyConnectedComponents` returns a vector containing the component number of each node

`FindStronglyConnectedCutArcs` returns an R List containing 1) A list of cut arc sources, and 2) A list of cut arc destinations

`FindBiEdgeConnectedCutEdges` returns an R List containing 1) A list of cut edge sources, and 2) A list of cut edge destinations

`FindBiNodeConnectedCutComponents` returns a vector containing the component number of each cut arc.

`FindBiNodeConnectedCutNodes` returns a vector containing the cut nodes

`FindConnectedComponents` returns a vector containing the component number of each node

`FindBiEdgeConnectedComponents` returns a vector containing the component number of each node
}
